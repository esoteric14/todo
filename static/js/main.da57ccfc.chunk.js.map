{"version":3,"sources":["logo.svg","components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Date","now","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","localtodo","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da57ccfc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nconst Form =({inputText,setInputText, todos, setTodos,setStatus})=>{\r\n    const inputTextHnadler =(e)=>{\r\n          setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler =(e) =>{\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos,\r\n            {text:inputText, completed:false, id: Date.now()} \r\n        ])\r\n        setInputText('');\r\n    }\r\n\r\n    const statusHandler=(e)=>{\r\n        setStatus(e.target.value)\r\n    }\r\n    return(\r\n        <form>\r\n            <input \r\n                value={inputText}\r\n                onChange={inputTextHnadler} \r\n                type=\"text\" \r\n                className=\"todo-input\" />\r\n            <button onClick={submitTodoHandler } className=\"todo-button\" type=\"submit\">\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n         </form>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import react from 'react';\r\n\r\nconst Todo = ({text, todo, todos, setTodos})=>{\r\n    const deleteHandler=()=>{\r\n        setTodos(todos.filter((el) => el.id !== todo.id))\r\n    }\r\n    const completeHandler =()=>{\r\n        setTodos(todos.map(item => {\r\n            if(item.id === todo.id ){\r\n                return {\r\n                    ...item,\r\n                    completed:!item.completed,\r\n                };\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed? \"completed\" : \"\"}`}> {text}</li>\r\n            <button  onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import react from 'react';\r\nimport Todo from './Todo'\r\nconst TodoList = ({setTodos,todos,filteredTodos})=>{\r\n    return(\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n            {filteredTodos.map((todo)=>(<Todo \r\n                setTodos={setTodos}\r\n                todos={todos}\r\n                todo={todo} \r\n                text={todo.text} \r\n                key ={todo.id} \r\n                id={todo.id}\r\n            />))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n","import logo from './logo.svg';\r\nimport react, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport Form from './components/Form';\r\nimport TodoList from './components/TodoList';\r\nfunction App() {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [todos, setTodos]= useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [filteredTodos, setFilteredTodos]= useState([]);\r\n\r\n  useEffect(()=>{\r\n    getLocalTodos();\r\n  },[]);\r\n\r\n  useEffect(()=>{\r\n    filterHandler();\r\n    saveLocalTodos();\r\n  },[todos,status]);\r\n\r\n  const filterHandler = () => {\r\n    switch(status){\r\n      case 'completed':\r\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\r\n        break;\r\n        case 'uncompleted':\r\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\r\n        break;\r\n        default :\r\n        setFilteredTodos(todos);  \r\n    }\r\n  };\r\n  const saveLocalTodos =()=>{\r\n     localStorage.setItem('todos', JSON.stringify(todos));\r\n  };\r\n  const getLocalTodos =()=>{\r\n    if(localStorage.getItem(\"todos\")=== null)\r\n      localStorage.setItem(\"todos\", JSON.stringify([]));\r\n    else\r\n      {\r\n        let localtodo = JSON.parse(localStorage.getItem('todos'));\r\n        setTodos(localtodo);\r\n\r\n      }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <header >\r\n         <h1>Life barbaad</h1>\r\n     </header>\r\n     <Form \r\n      todos={todos} \r\n      setTodos={setTodos} \r\n      inputText={inputText } \r\n      setInputText={setInputText}\r\n      setStatus={setStatus}\r\n      />\r\n     <TodoList filteredTodos={filteredTodos} setTodos={setTodos} todos={todos} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}